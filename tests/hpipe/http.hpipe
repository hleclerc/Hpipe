# read until end
read_string[ name, end = 10 | 13 ] = beg_str_next[ name ] ( any - end )** end_str_next[ name ]
read_ssized[ name, size ] = beg_str_next[ name ] skip[ size ] end_str_next[ name ]
read_number[ name ] = digit { name = *data - '0'; } ( digit { name = 10 * name + *data - '0'; } )**

get = 'GET ' read_string[ 'url', ' ' ] (
    ( 10 eol read_ssized[ 'content', 'content_length' ] { os << "url:" << url << " cl:" << content_length << " content:" << content; } any** ) |
    ( 10 'Content-Length: ' read_number[ 'content_length' ] ) |
    any
)** 

main = get

beg_methods
    size_t content_length = 0;
end_methods

beg_training
    input
        GET /smurf HTTP/1.1
        Content-Length: 17

    freq
        1
end_training

beg_test GET /smurf HTTP/1.1
    input
        GET /smurf HTTP/1.1
        Content-Length: 3

        12345
    output
        /smurf cl:3 content:123 status=OK
end_test
